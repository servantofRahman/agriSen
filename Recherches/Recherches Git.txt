Recherches Git

INITIALISER UN PROJET A GITHUB

- On crée le repo sur git
- On crée notre projet sur notre ordi
- On se place sur le dossier du projet et on fait git init pour demander à git de reconnaître le dossier
- On fait git remote add origin main (ou une branche quelconque si ce n'est pas main)
- On fait un git add . pour demander à git de reconnaître les fichiers de mon ordi
- On fait un git commit -m "Message" pour sauvegarder les changements
- On peut faire un git push -u nom_branche (pour pousser le projet dans la branche spécifiée, le -u est pour ne plus avoir à préciser le nom de la branche quand on fera git pull ou git push)


Pull : Tirer du code de Git vers mon ordi

Syntaxe : git pull origin main
"Je tire le contenu de main depuis Git (avec son serveur origin)

Merge : Fusionner deux branches 
On fait git checkout main (je me place sur l'une des branches d'abord avec cette syntaxe)
git merge libasse (ensuite je le fusionne avec la branche libasse c'est à dire que tous les fichiers de libasse se retrouvent dans main)


Cloner : Copier un projet (repo) git sur mon ordi
- Se placer d'abord sur le dossier où je veux avoir le repo
- Faire git clone URL_PROJET (L'Url est obtenu en allant sur git et en cliquant sur CODE et on le copie)

Add : Cela veut dire 'Hey Git, reconnais le fichier là"
git add NOM_FICHIER

COMMIT : Sauvegarder ce qu'on a fait en local sur GIT
git commit -m "Message"  ---> ce message, c'est pour décrire l'état de la sauvegarde, donc il faut être explicite
le "-m" c'est pour écrire un message, sinon un éditeur sera ouvert pour me permettre d'écrire le message 

PUSH : Pousser le fichier sur git physiquement
Une fois que git reconnait notre fichier et que les sauvegardes ont été faites, on peut vouloir pousser le fichier sur GitHub
git push origin NOM_BRANCHE (branche où se trouve le fichier)

