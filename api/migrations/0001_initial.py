# Generated by Django 5.1.4 on 2025-05-06 22:35

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='cultures',
            fields=[
                ('culture_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nom_culture', models.CharField(max_length=100)),
                ('region', models.CharField(max_length=100)),
                ('saison', models.CharField(max_length=50)),
                ('besoins_eau', models.CharField(max_length=100)),
                ('conseils', models.TextField()),
                ('fichier_technique', models.FileField(upload_to='fichier_technique/')),
            ],
        ),
        migrations.CreateModel(
            name='meteo',
            fields=[
                ('meteo_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('region', models.CharField(max_length=100)),
                ('temperature', models.FloatField()),
                ('humidite', models.FloatField()),
                ('vent', models.FloatField()),
                ('date_enregistrement', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='utilisateurs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('type_utilisateur', models.CharField(choices=[('agriculteur', 'Agriculteur'), ('syndic', 'Syndic'), ('utilisateur', 'Utilisateur'), ('admin', 'Admin')], default='utilisateur', max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='agriculteurs',
            fields=[
                ('agriculteur_id', models.UUIDField(primary_key=True, serialize=False)),
                ('region', models.CharField(max_length=100)),
                ('commune', models.CharField(max_length=10)),
                ('telephone', models.CharField(max_length=20)),
                ('photo_profil', models.FileField(upload_to='photo_profile/')),
                ('bio', models.TextField()),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='messages_privees',
            fields=[
                ('message_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('contenu', models.TextField()),
                ('date_envoi', models.DateTimeField(auto_now_add=True)),
                ('lu', models.BooleanField(default=False)),
                ('destinataire_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('expediteur_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expediteur', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='publications',
            fields=[
                ('publication_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('contenu', models.TextField()),
                ('image', models.FileField(upload_to='publication-images/')),
                ('date_publication', models.DateTimeField(auto_now_add=True)),
                ('region', models.CharField(max_length=100)),
                ('culture_associee', models.CharField(max_length=100)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='commentaires',
            fields=[
                ('commentaire_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('contenu', models.TextField()),
                ('date_commentaire', models.DateTimeField(auto_now_add=True)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('publication_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.publications')),
            ],
        ),
        migrations.CreateModel(
            name='stocks',
            fields=[
                ('stock_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nom_produit', models.CharField(max_length=100)),
                ('quantite', models.IntegerField()),
                ('unite', models.CharField(max_length=20)),
                ('prix_unitaire', models.IntegerField()),
                ('date_ajout', models.DateTimeField(auto_now_add=True)),
                ('agriculteur_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.agriculteurs')),
            ],
        ),
        migrations.CreateModel(
            name='sujets_forum',
            fields=[
                ('sujet_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('titre', models.CharField(max_length=255)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('est_prive', models.BooleanField(default=False)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='messages_forum',
            fields=[
                ('message_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('contenu', models.TextField()),
                ('date_message', models.DateTimeField(auto_now_add=True)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('sujet_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.sujets_forum')),
            ],
        ),
        migrations.CreateModel(
            name='ventes',
            fields=[
                ('vente_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantite_vendue', models.IntegerField()),
                ('date_vente', models.DateTimeField(auto_now_add=True)),
                ('acheteur_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('stock_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.stocks')),
            ],
        ),
    ]
